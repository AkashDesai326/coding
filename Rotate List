/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        ListNode *temp = head;
        int count=0;
        if(head == NULL || k==0)
            return head;
        while(temp->next!=NULL)
        {
            count++;
            temp=temp->next;
        }
        count++;
        
        k = count - k % count;
        if(k==0)
            return head;
        temp->next = head;
        temp = head;
        while(k-- > 1)
            temp = temp->next;
        head = temp->next;
        temp->next = NULL;
        return head;
    }
};
